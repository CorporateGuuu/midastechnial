openapi: 3.0.0
info:
  title: RepairDesk API Client
  description: A comprehensive PHP client for interacting with the RepairDesk Public API v1
  version: 1.0.0
  contact:
    name: RepairDesk API Support
    url: https://repairdesk.co/support

servers:
  - url: https://api.repairdesk.co/api/v1
    description: Production server

tags:
  - name: Devices
    description: Device management endpoints
  - name: Inventory
    description: Inventory management endpoints
  - name: Customers
    description: Customer management endpoints
  - name: Repair Tickets
    description: Repair ticket management endpoints
  - name: Orders
    description: Order management endpoints
  - name: Appointments
    description: Appointment management endpoints
  - name: Leads
    description: Lead management endpoints
  - name: Statuses
    description: Status management endpoints
  - name: Employees
    description: Employee management endpoints

paths:
  /devices:
    get:
      tags: [Devices]
      summary: Get devices associated with tickets
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of items to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of items to skip
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'

  /devices/{id}:
    get:
      tags: [Devices]
      summary: Get specific device by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Device ID
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /inventory:
    get:
      tags: [Inventory]
      summary: Get inventory items
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of items to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of items to skip
      responses:
        '200':
          $ref: '#/components/responses/Success'

    post:
      tags: [Inventory]
      summary: Add new inventory item
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItemInput'
      responses:
        '201':
          $ref: '#/components/responses/Success'

  /inventory/{id}:
    put:
      tags: [Inventory]
      summary: Update inventory item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Inventory item ID
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItemInput'
      responses:
        '200':
          $ref: '#/components/responses/Success'

  /customers:
    get:
      tags: [Customers]
      summary: Get customers list
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
        - name: page
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: Page number for pagination
        - name: pagesize
          in: query
          required: false
          schema:
            type: integer
          description: Number of records per page
        - name: referredby
          in: query
          required: false
          schema:
            type: string
          description: Like Facebook/Friend
        - name: keyword
          in: query
          required: false
          schema:
            type: string
          description: Search by customer firstname/lastname, phone/mobile, email, postcode, city, organization and driving licence
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "OK"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerList'
        '401':
          $ref: '#极速赛车开奖直播历史记录/components/responses/Unauthorized'

  /customers/{id}:
    get:
      tags: [Customers]
      summary: Get customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the customer to retrieve
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API Key
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "OK"
                  data:
                    $ref: '#/components/schemas/CustomerDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'

    put:
      tags: [Customers]
      summary: Update customer information
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Customer ID
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInput'
      responses:
        '200':
          $ref: '#/components/responses/Success'

  /repairs:
    get:
      tags: [Repair Tickets]
      summary: Get repair tickets with comprehensive filtering and search
      description: |
        Retrieve repair tickets with advanced filtering, search, and pagination capabilities.
        Supports searching by customer information, device details, ticket numbers, and more.
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
        - name: keyword
          in: query
          required: false
          schema:
            type: string
          description: |
            Search by customer firstname, lastname, email, phone/mobile, walk-in customer,
            ticket number, device name, service problem title, IMEI, or serial number
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: Page number for pagination (starts from 0)
        - name: pagesize
          in: query
          required: false
          schema:
            type: integer
            maximum: 1000
          description: Number of items per page, maximum limit is 1000 records
        - name: status
          in: query
          required: false
          schema:
            type: string
          description: Filter by ticket status
        - name: assigned_to
          in: query
          required: false
          schema:
            type: string
          description: Filter by employee ID of assigned user (from Employees API)
        - name: created_by
          in: query
          required: false
          schema:
            type: string
          description: Filter by employee ID of user who created the ticket (from Employees API)
        - name: from_date
          in: query
          required: false
          schema:
            type: integer
          description: Filter from date in Unix timestamp format
        - name: to_date
          in: query
          required: false
          schema:
            type: integer
          description: Filter to date in Unix timestamp format
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "OK"
                  data:
                    $ref: '#/components/schemas/TicketListResponse'
        '400':
          $ref: '#极速赛车开奖直播历史记录/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'

    post:
      tags: [Repair Tickets]
      summary: Create repair ticket
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairTicketInput'
      responses:
        '201':
          $ref: '#/components/responses/Success'

  /repairs/{id}:
    put:
      tags: [Repair Tickets]
      summary: Update repair ticket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Repair ticket ID
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairTicketInput'
      responses:
        '200':
          $ref: '#/components/responses/Success'

  /ticket/updateticketstatus/{id}:
    put:
      tags: [Repair Tickets]
      summary: Update ticket line item status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Ticket ID
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketStatusUpdateInput'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /tickets:
    post:
      tags: [Repair Tickets]
      summary: Create ticket with comprehensive device and custom field data
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketInput'
      responses:
        '200':
          description: Ticket created successfully
          content:
            application/json:
             极速赛车开奖直播历史记录 schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Ticket was created successfully"
                  data:
                    $ref: '#/components/s极速赛车开奖直播历史记录chemas/TicketResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'

  /orders:
    get:
      tags: [Orders]
      summary: Get orders
      parameters:
        - name: api_key
         极速赛车开奖直播历史记录 in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      responses:
        '200':
          $ref: '#/components/responses/Success'

  /orders/{id}:
    get:
      tags: [Orders]
      summary: Get specific order by ID
      parameters:
        - name: id
          in: path
          required: true
         极速赛车开奖直播历史记录 schema:
            type: integer
          description: Order ID
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      responses:
        '200':
          $ref: '#/components/responses/Success'

  /appointments:
    get:
      tags: [Appointments]
      summary: Get appointments
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type:极速赛车开奖直播历史记录 string
          description: API key to authorize the request
      responses:
        '200':
          $ref: '#/components/responses/Success'

    post:
      tags: [Appointments]
      summary: Create appointment
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentInput'
      responses:
       极速赛车开奖直播历史记录 '201':
          $ref: '#/components/responses/Success'

  /leads:
    post:
      tags: [Leads]
      summary: Create lead from appointment
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/s极速赛车开奖直播历史记录chemas/LeadInput'
      responses:
        '201':
          $ref: '#/components/responses/Success'

  /parts:
    get:
      tags: [Inventory]
      summary: Retrieves a list of all parts
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/极速赛车开奖直播历史记录components/responses/Unauthorized'

  /taxclasses:
    get:
      tags: [Inventory]
      summary: Retrieves a list of tax classes against a store location
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /statuses:
    get:
      tags: [Statuses]
      summary: Get ticket statuses
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      responses:
        '200':
          $ref: '#/components/responses/Success'

  /employees:
    get:
      tags: [Employees]
      summary: Retrieves a list of employees
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: API key to authorize the request
      responses:
        '200':
          description: A list of employees
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "OK"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Employee'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'

  /purchase-orders:
    get:
      tags: [Orders]
      summary: Get purchase orders with detailed filtering options
      description: |
        Retrieves a list of purchase order details based on the provided parameters.
        Supports advanced filtering by various criteria including supplier, status, date ranges, and more.
      parameters:
        - name: api_key
          in: query
          required: true
          schema:
            type: string
          description: Your API key for authentication
        - name: page
          in: query
          required: true
          schema:
            type: integer
            example: 1
          description: Page number for pagination
        - name: pagesize
          in: query
          required: true
          schema:
            type: integer
            example: 10
          description: Number of records per page
        - name: id
          in: query
          required: false
          schema:
            type: integer
          description: Purchase order ID
        - name: item_name
          in: query
          required: false
          schema:
            type: string
          description: Product name
        - name: manufacturer
          in: query
          required: false
          schema:
            type: integer
          description: Manufacturer ID
        - name: purchase_order_status
          in: query
          required: false
          schema:
            type: string
          description: PO-Status
        - name: po_order_id
          in: query
          required: false
          schema:
            type: string
          description: PO Order number
        - name: supplier
          in: query
          required: false
          schema:
            type: string
          description: Supplier Name
        - name: sku
          in: query
          required: false
          schema:
            type: string
          description: Item SKU
        - name: createdd_date
          in: query
          required: false
          schema:
            type: string
          description: It Will match the exact date [YYYY-MM-DD]
        - name: created_date
          in: query
          required: false
          schema:
            type: string
          description: Cases: today, 7days, 14days, 30days or date starting from the given date YYYY-MM-DD
      responses:
        '200':
          description: Purchase order detail list retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "OK"
                  data:
                    type: object
                    properties:
                      purchaseOrderListData:
                        type: array
                        items:
                          $ref: '#/components/schemas/PurchaseOrder'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request parameters"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Unauthorized"
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "Unauthorized"
                      message:
                        type: string
                        example: "Your request was made with invalid credentials."
                      code:
                        type: integer
                        example: 0
                      status:
                        type: integer
                        example: 401

components:
  schemas:
    Device:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: "iPhone 12"
        model:
          type: string
          example: "A2172"
        manufacturer:
          type: string
          example: "Apple"
        type:
          type: string
          example: "smartphone"

    InventoryItem:
      type: object
      properties:
        id:
          type: integer
          example: 456
        name:
          type: string
          example: "iPhone Screen"
        sku:
          type: string
          example: "IPH-SCREEN-001"
        price:
          type: number
          format: float
          example: 49.99
        cost_price:
          type: number
          format: float
          example: 25.00
        in_stock:
          type: integer
          example: 10
        item_type:
          type: string
          example: "part"
        tax_class:
          type: string
          example: "standard"

    InventoryItemInput:
      type: object
      required:
        - name
        - item_type
        - manufacturer
        - device
        - in_stock

    TicketInput:
      type: object
      required:
        - devices
        - summary
      properties:
        devices:
          type: array
          items:
            type: object
            properties:
              imei:
                type: string
                example: "114231112421231"
              public_comments:
                type: string
                example: "Our team is working on it"
              public_comment_flag:
                type: integer
                example: 1
              PreConditions:
                type: array
                items:
                  type: object
              status:
                type: string
                example: "In Progress"
              PostPreCategory:
                type: string
                example: "34826"
              task_type:
                type: integer
                example: 1
              gst:
                type: number
                format: float
                example: 14.894
              device:
                type: string
                example: "845618"
              staff_comments:
                type: string
                example: ""
              warranty:
                type: string
                example: "5"
              lineItemId:
                type: integer
                example: 0
              repairProdItems:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "7516047"
                    name:
                      type: string
                      example: "Huawei Mate 9 Screen Replacement Blk"
              line_discount:
                type: number
                format: float
                example: 0
              taxclass:
                type: integer
                example: 28632
              device_location:
                type: string
                example: ""
              warranty_timeframe:
                type: string
                example: "3"
              Parts:
                type: array
                items:
                  type: object
                  properties:
                    product_id:
                      type: string
                      example: "7516552"
                    name:
                      type: string
                      example: "Huawei Mate 9 Screen Replacement Blk"
                    price:
                      type: string
                      example: "0.00"
                    quantity:
                      type: integer
                      example: 1
                    supplier:
                      type: string
                      example: ""
                    warranty_timeframe:
                      type: string
                      example: ""
                    warrenty:
                      type: string
                      example: ""
                    serials:
                      type: object
                      properties:
                        "0":
                          type: string
                          example: ""
                    sku:
                      type: string
                      example: ""
              supplied:
                type: array
                items:
                  type: object
              security_code:
                type: string
                example: ""
              network:
                type: string
                example: ""
              serial:
                type: string
                example: ""
              price:
                type: number
                format: float
                example: 184.105
              due_on:
                type: integer
                example: 1588156799
              tax_inclusive:
                type: string
                example: "1"
              assigned_to:
                type: integer
                example: 10111
              repairCategId:
                type: string
                example: "34826"
              images:
                type: array
                items:
                  type: object
        customFields:
          type: array
          items:
            type: object
            properties:
              racknumber:
                type: object
                properties:
                  label:
                    type: string
                    example: "Rack Number"
                  value:
                    type: string
                    example: "311"
              shipmentnum:
                type: object
                properties:
                  label:
                    type: string
                    example: "Shipment Number"
                  value:
                    type: string
                    example: "12344211"
        summary:
          type: object
          required:
            - customer_id
            - employee_id
          properties:
            signature:
              type: string
              example: ""
            how_did_u_find_us:
              type: string
              example: ""
            customer_id:
              type: integer
              example: 388
            estimate_id:
              type: string
              example: ""
            employee_id:
              type: integer
              example: 10111

    TicketResponse:
      type: object
      properties:
        id:
          type: integer
          example: 2614827
        order_id:
          type: string
          example: "4578"
        customer_id:
          type: integer
          example: 388
        ticketLabels:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "64656076"
              name:
                type: string
                example: "Huawei Mate 9 Screen Replacement Blk"
        devicesRepairItems:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "64656076"
              ticketId:
                type: string
                example: "2614827"
              lineItemId:
                type: string
                example: "0"
        notification_message:
          type: string
          example: "No User In List"

    TicketStatusUpdateInput:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: The new status for the ticket
          example: "In Progress"
        lineItemId:
          type: integer
          description: Specific line item ID to update (optional)
          example: 456

    TicketErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        statusCode:
          type: integer
          example: 401
        message:
          type: string
          example: "Unauthorized"
        data:
          type: object
          properties:
            name:
              type: string
              example: "Unauthorized"
            message:
              type: string
              example: "Your request was made with invalid credentials."
            code:
              type: integer
              example: 0
            status:
              type: integer
              example: 401
